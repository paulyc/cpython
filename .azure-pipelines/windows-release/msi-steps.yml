steps:
  - template: ./checkout.yml

  - task: DownloadBuildArtifacts@0
    displayName: 'Download artifact: doc'
    inputs:
      artifactName: doc
      downloadPath: $(Build.BinariesDirectory)

  - task: CopyFiles@2
    displayName: 'Merge documentation files'
    inputs:
      sourceFolder: $(Build.BinariesDirectory)\doc
      targetFolder: $(Build.SourcesDirectory)\Doc\build
      contents: |
        htmlhelp\*.chm

  - task: DownloadBuildArtifacts@0
    displayName: 'Download artifact: bin_win32'
    inputs:
      artifactName: bin_win32
      downloadPath: $(Build.BinariesDirectory)

  - task: DownloadBuildArtifacts@0
    displayName: 'Download artifact: bin_win32_d'
    inputs:
      artifactName: bin_win32_d
      downloadPath: $(Build.BinariesDirectory)

  - task: CopyFiles@2
    displayName: 'Merge win32 debug files'
    inputs:
      sourceFolder: $(Build.BinariesDirectory)\bin_win32_d
      targetFolder: $(Build.BinariesDirectory)\bin_win32
      contents: |
        **\*_d.*

  - task: DownloadBuildArtifacts@0
    displayName: 'Download artifact: bin_amd64'
    inputs:
      artifactName: bin_amd64
      downloadPath: $(Build.BinariesDirectory)

  - task: DownloadBuildArtifacts@0
    displayName: 'Download artifact: bin_amd64_d'
    inputs:
      artifactName: bin_amd64_d
      downloadPath: $(Build.BinariesDirectory)

  - task: CopyFiles@2
    displayName: 'Merge amd64 debug files'
    inputs:
      sourceFolder: $(Build.BinariesDirectory)\bin_amd64_d
      targetFolder: $(Build.BinariesDirectory)\bin_amd64
      contents: |
        **\*_d.*

  - task: DownloadBuildArtifacts@0
    displayName: 'Download artifact: tcltk_lib_win32'
    inputs:
      artifactName: tcltk_lib_win32
      downloadPath: $(Build.BinariesDirectory)

  - task: DownloadBuildArtifacts@0
    displayName: 'Download artifact: tcltk_lib_amd64'
    inputs:
      artifactName: tcltk_lib_amd64
      downloadPath: $(Build.BinariesDirectory)

  - script: |
      ren bin_win32 win32
      ren bin_amd64 amd64
    displayName: 'Correct artifact directory names'
    workingDirectory: $(Build.BinariesDirectory)

  - script: |
      call Tools\msi\get_externals.bat
      call PCbuild\find_python.bat
      echo ##vso[task.setvariable variable=PYTHON]%PYTHON%
      call PCbuild/find_msbuild.bat
      echo ##vso[task.setvariable variable=MSBUILD]%MSBUILD%
    displayName: 'Get external dependencies'

  - script: |
      %PYTHON% -m pip install blurb
      %PYTHON% -m blurb merge -f Misc\NEWS
    displayName: 'Merge NEWS file'

  - script: |
      %MSBUILD% Tools\msi\launcher\launcher.wixproj
    displayName: 'Build launcher installer'
    env:
      Platform: x86
      Py_OutDir: $(Build.BinariesDirectory)

  - script: |
      %MSBUILD% Tools\msi\bundle\releaselocal.wixproj /t:Rebuild /p:RebuildAll=true
      %MSBUILD% Tools\msi\bundle\releaseweb.wixproj /t:Rebuild /p:RebuildAll=false
    displayName: 'Build win32 installer'
    env:
      Platform: x86
      Py_OutDir: $(Build.BinariesDirectory)
      PYTHON: $(Build.BinariesDirectory)\win32\python.exe
      PYTHONHOME: $(Build.SourcesDirectory)
      TclTkLibraryDir: $(Build.BinariesDirectory)\tcltk_lib_win32
      BuildForRelease: true
      SuppressMinGWLib: true

  - script: |
      %MSBUILD% Tools\msi\bundle\releaselocal.wixproj /t:Rebuild /p:RebuildAll=true
      %MSBUILD% Tools\msi\bundle\releaseweb.wixproj /t:Rebuild /p:RebuildAll=false
    displayName: 'Build amd64 installer'
    env:
      Platform: x64
      Py_OutDir: $(Build.BinariesDirectory)
      PYTHON: $(Build.BinariesDirectory)\amd64\python.exe
      PYTHONHOME: $(Build.SourcesDirectory)
      TclTkLibraryDir: $(Build.BinariesDirectory)\tcltk_lib_amd64
      BuildForRelease: true
      SuppressMinGWLib: true

  - task: CopyFiles@2
    displayName: 'Assemble artifact: msi (1/2)'
    inputs:
      sourceFolder: $(Build.BinariesDirectory)\win32\en-us
      targetFolder: $(Build.ArtifactStagingDirectory)\msi\win32
      contents: |
        *.msi
        *.cab
        *.exe

  - task: CopyFiles@2
    displayName: 'Assemble artifact: msi (2/2)'
    inputs:
      sourceFolder: $(Build.BinariesDirectory)\amd64\en-us
      targetFolder: $(Build.ArtifactStagingDirectory)\msi\amd64
      contents: |
        *.msi
        *.cab
        *.exe

  - task: PublishBuildArtifacts@1
    displayName: 'Publish MSI'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)\msi'
      ArtifactName: msi
